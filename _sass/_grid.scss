/* Set up some rules to govern the grid */
.grid {
  display: block;
  clear: both;
  @include clearfix();
}

.grid .unit {
  float: left;
  width: 100%;
  padding: 10px;
}

/* This ensures the outer gutters are equal to the (doubled) inner gutters. */
// .grid .unit:first-child { padding-left: 20px;  }
// .grid .unit:last-child  { padding-right: 20px; }

/* Nested grids already have padding though, so let's nuke it */
.unit .unit:first-child { padding-left: 0;  }
.unit .unit:last-child  { padding-right: 0; }
.unit .grid:first-child > .unit { padding-top: 0; }
.unit .grid:last-child > .unit  { padding-bottom: 0; }

/* Let people nuke the gutters/padding completely in a couple of ways */
.no-gutters .unit,
.unit.no-gutters {
  padding: 0 !important;
}

.grid .whole            { width: 100%; }
.grid .half             { width: 50%; }
.grid .one-third        { width: 33.3332%; }
.grid .two-thirds       { width: 66.6665%; }
.grid .one-quarter,
.grid .one-fourth       { width: 25%; }
.grid .three-quarters,
.grid .three-fourths,   { width: 75%; }
.grid .one-fifth,       { width: 20%; }
.grid .two-fifths,      { width: 40%; }
.grid .three-fifths,    { width: 60%; }
.grid .four-fifths,     { width: 80%; }
.grid .golden-small,    { width: 38.2716%; }
.grid .golden-large,    { width: 61.7283%; }

#mywrapper{
  max-width: 1100px;
  min-width: 300px;
  margin: 10px auto;
}

#mycolumns{
  /* the column-count property easily splits the content of a div into 3 columns. it's not accepted by most browsers on its own, so it's a good idea to use this with all the appropriate prefixes */
  -webkit-column-count: 3;
  -webkit-column-gap: 15px;
  -webkit-column-fill: auto;
}

.mypin{
  display: inline-block;
  background: #FEFEFE;
  border: 2px solid #FAFAFA;
  box-shadow: 0 1px 2px rgba(34, 25, 25, 0.4);
  margin: 0 2px 15px;
  column-break-inside: avoid;
  padding: 15px;
  padding-bottom: 5px;
  /* let's give the background of the pins a little dimension by using a gradient */
  background: linear-gradient(45deg, #FFF, #F9F9F9);
  opacity: 1;
  transition: all .2s ease;
}

@include mq-down (sm) {
  /* Stack anything that isn't full-width on smaller screens
     and doesn't provide the no-stacking-on-mobiles class */
  .grid:not(.no-stacking-on-mobiles) > .unit {
    width: 100% !important;
    padding-left: 20px;
    padding-right: 20px;
  }
  .unit .grid .unit {
    padding-left: 0px;
    padding-right: 0px;
  }
}
